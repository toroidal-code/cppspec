name: Build and Test

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        compiler: [native, llvm-18, gcc-14]
        os: [ubuntu-latest, windows-latest, macos-13, macos-15]
        exclude:
          - os: windows-latest
            compiler: gcc-14
          - os: macos-13
            compiler: native # AppleClang is too old

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install Clang
        run: |
          brew install llvm@18
          brew link --force --overwrite llvm@18
          echo "CC=$(brew --prefix llvm@18)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@18)/bin/clang++" >> $GITHUB_ENV
        if: ${{ matrix.compiler == 'llvm-18' && (matrix.os == 'macos-13' || matrix.os == 'macos-15') }}

      - name: Use LLVM and Clang
        run: |
          echo "CC=clang-18" >> $GITHUB_ENV
          echo "CXX=clang++-18" >> $GITHUB_ENV
        if: ${{ matrix.compiler == 'llvm-18' && (matrix.os != 'macos-13' && matrix.os != 'macos-15') }}

      - name: Use GCC
        run: |
          echo "CC=gcc-14" >> $GITHUB_ENV
          echo "CXX=g++-14" >> $GITHUB_ENV
        if: ${{ matrix.compiler == 'gcc-14' }}

      - name: Configure
        run: cmake -B build -DCPPSPEC_BUILD_TESTS=YES
        if: ${{ matrix.compiler != 'llvm-18' || matrix.os != 'windows-latest' }}

      - name: Configure ClangCL
        run: cmake -B build -DCPPSPEC_BUILD_TESTS=YES -G "Visual Studio 17 2022" -T ClangCL
        if: ${{ matrix.compiler == 'llvm-18' && matrix.os == 'windows-latest' }}

      - name: Build
        run: cmake --build build --config Release

      - name: Test
        run: ctest --test-dir build --build-config Release --output-on-failure

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test Results (${{ matrix.os }} - ${{ matrix.compiler }})
          path: build/spec/results/*.xml

  publish-test-results:
    name: "Publish Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      checks: write

      # only needed unless run with comment_mode: off
      pull-requests: write

    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"
